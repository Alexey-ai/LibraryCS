// <auto-generated />
using System;
using LibraryCS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryCS.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20200219160046_InitialDBCreation")]
    partial class InitialDBCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryCS.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<bool>("Aviability");

                    b.Property<DateTime>("BookAddDate");

                    b.Property<string>("BookPicturesPath");

                    b.Property<string>("Description");

                    b.Property<string>("Edition");

                    b.Property<string>("Genre");

                    b.Property<string>("NameBook")
                        .IsRequired();

                    b.HasKey("BookID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("LibraryCS.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID");

                    b.Property<DateTime>("OrderDate");

                    b.Property<DateTime?>("OrderReturnDate");

                    b.Property<int>("ReaderID");

                    b.HasKey("OrderID");

                    b.HasIndex("BookID");

                    b.HasIndex("ReaderID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("LibraryCS.Models.PictureModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("BookID");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("LibraryCS.Models.Reader", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<string>("Adress");

                    b.Property<DateTime>("BirthdayDate");

                    b.Property<string>("Passport");

                    b.Property<string>("Phone");

                    b.Property<string>("ReaderLastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ReaderName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ReadersPicsPath");

                    b.HasKey("ID");

                    b.ToTable("Reader");
                });

            modelBuilder.Entity("LibraryCS.Models.Order", b =>
                {
                    b.HasOne("LibraryCS.Models.Book", "Book")
                        .WithMany("Order")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LibraryCS.Models.Reader", "Reader")
                        .WithMany("Orders")
                        .HasForeignKey("ReaderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LibraryCS.Models.PictureModel", b =>
                {
                    b.HasOne("LibraryCS.Models.Book")
                        .WithMany("Pictures")
                        .HasForeignKey("BookID");
                });
#pragma warning restore 612, 618
        }
    }
}
